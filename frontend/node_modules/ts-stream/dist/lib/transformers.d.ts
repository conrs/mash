/**
 * Promise-based object stream with seamless support for back-pressure and error
 * handling, written in Typescript.
 *
 * Copyright (C) 2015 Martin Poelstra
 * License: MIT
 */
import { Transform } from "./Transform";
export declare function mapper<In, Out>(mapFn: (value: In) => Out | PromiseLike<Out>): Transform<In, Out>;
export declare function filterer<T>(filterFn: (value: T) => boolean | PromiseLike<boolean>): Transform<T, T>;
